### YamlMime:ManagedReference
items:
- uid: PitneyBowes.Developer.ShippingApi.Rules.ConvenienceExtensions
  commentId: T:PitneyBowes.Developer.ShippingApi.Rules.ConvenienceExtensions
  id: ConvenienceExtensions
  parent: PitneyBowes.Developer.ShippingApi.Rules
  children:
  - PitneyBowes.Developer.ShippingApi.Rules.ConvenienceExtensions.Contains``1(IEnumerable{``0},``0)
  - PitneyBowes.Developer.ShippingApi.Rules.ConvenienceExtensions.IsWithin(PitneyBowes.Developer.ShippingApi.IParcelDimension,PitneyBowes.Developer.ShippingApi.Rules.DimensionRule)
  - PitneyBowes.Developer.ShippingApi.Rules.ConvenienceExtensions.IsWithin(PitneyBowes.Developer.ShippingApi.IParcelWeight,PitneyBowes.Developer.ShippingApi.Rules.WeightRule)
  langs:
  - csharp
  - vb
  name: ConvenienceExtensions
  nameWithType: ConvenienceExtensions
  fullName: PitneyBowes.Developer.ShippingApi.Rules.ConvenienceExtensions
  type: Class
  source:
    id: ConvenienceExtensions
    path: ''
    startLine: 9948
  assemblies:
  - cs.temp.dll
  namespace: PitneyBowes.Developer.ShippingApi.Rules
  syntax:
    content: public static class ConvenienceExtensions
    content.vb: Public Module ConvenienceExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: PitneyBowes.Developer.ShippingApi.Rules.ConvenienceExtensions.Contains``1(IEnumerable{``0},``0)
  commentId: M:PitneyBowes.Developer.ShippingApi.Rules.ConvenienceExtensions.Contains``1(IEnumerable{``0},``0)
  id: Contains``1(IEnumerable{``0},``0)
  isExtensionMethod: true
  parent: PitneyBowes.Developer.ShippingApi.Rules.ConvenienceExtensions
  langs:
  - csharp
  - vb
  name: Contains<T>(IEnumerable<T>, T)
  nameWithType: ConvenienceExtensions.Contains<T>(IEnumerable<T>, T)
  fullName: PitneyBowes.Developer.ShippingApi.Rules.ConvenienceExtensions.Contains<T>(IEnumerable<T>, T)
  type: Method
  source:
    id: Contains
    path: ''
    startLine: 9950
  assemblies:
  - cs.temp.dll
  namespace: PitneyBowes.Developer.ShippingApi.Rules
  syntax:
    content: public static bool Contains<T>(this IEnumerable<T> enumerable, T value)
    parameters:
    - id: enumerable
      type: IEnumerable{{T}}
    - id: value
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: System.Boolean
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Contains(Of T)(enumerable As IEnumerable(Of T), value As T) As Boolean
  overload: PitneyBowes.Developer.ShippingApi.Rules.ConvenienceExtensions.Contains*
  nameWithType.vb: ConvenienceExtensions.Contains(Of T)(IEnumerable(Of T), T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: PitneyBowes.Developer.ShippingApi.Rules.ConvenienceExtensions.Contains(Of T)(IEnumerable(Of T), T)
  name.vb: Contains(Of T)(IEnumerable(Of T), T)
- uid: PitneyBowes.Developer.ShippingApi.Rules.ConvenienceExtensions.IsWithin(PitneyBowes.Developer.ShippingApi.IParcelDimension,PitneyBowes.Developer.ShippingApi.Rules.DimensionRule)
  commentId: M:PitneyBowes.Developer.ShippingApi.Rules.ConvenienceExtensions.IsWithin(PitneyBowes.Developer.ShippingApi.IParcelDimension,PitneyBowes.Developer.ShippingApi.Rules.DimensionRule)
  id: IsWithin(PitneyBowes.Developer.ShippingApi.IParcelDimension,PitneyBowes.Developer.ShippingApi.Rules.DimensionRule)
  isExtensionMethod: true
  parent: PitneyBowes.Developer.ShippingApi.Rules.ConvenienceExtensions
  langs:
  - csharp
  - vb
  name: IsWithin(IParcelDimension, DimensionRule)
  nameWithType: ConvenienceExtensions.IsWithin(IParcelDimension, DimensionRule)
  fullName: PitneyBowes.Developer.ShippingApi.Rules.ConvenienceExtensions.IsWithin(PitneyBowes.Developer.ShippingApi.IParcelDimension, PitneyBowes.Developer.ShippingApi.Rules.DimensionRule)
  type: Method
  source:
    id: IsWithin
    path: ''
    startLine: 9959
  assemblies:
  - cs.temp.dll
  namespace: PitneyBowes.Developer.ShippingApi.Rules
  syntax:
    content: public static bool IsWithin(this IParcelDimension parcel, DimensionRule rule)
    parameters:
    - id: parcel
      type: PitneyBowes.Developer.ShippingApi.IParcelDimension
    - id: rule
      type: PitneyBowes.Developer.ShippingApi.Rules.DimensionRule
    return:
      type: System.Boolean
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsWithin(parcel As IParcelDimension, rule As DimensionRule) As Boolean
  overload: PitneyBowes.Developer.ShippingApi.Rules.ConvenienceExtensions.IsWithin*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PitneyBowes.Developer.ShippingApi.Rules.ConvenienceExtensions.IsWithin(PitneyBowes.Developer.ShippingApi.IParcelWeight,PitneyBowes.Developer.ShippingApi.Rules.WeightRule)
  commentId: M:PitneyBowes.Developer.ShippingApi.Rules.ConvenienceExtensions.IsWithin(PitneyBowes.Developer.ShippingApi.IParcelWeight,PitneyBowes.Developer.ShippingApi.Rules.WeightRule)
  id: IsWithin(PitneyBowes.Developer.ShippingApi.IParcelWeight,PitneyBowes.Developer.ShippingApi.Rules.WeightRule)
  isExtensionMethod: true
  parent: PitneyBowes.Developer.ShippingApi.Rules.ConvenienceExtensions
  langs:
  - csharp
  - vb
  name: IsWithin(IParcelWeight, WeightRule)
  nameWithType: ConvenienceExtensions.IsWithin(IParcelWeight, WeightRule)
  fullName: PitneyBowes.Developer.ShippingApi.Rules.ConvenienceExtensions.IsWithin(PitneyBowes.Developer.ShippingApi.IParcelWeight, PitneyBowes.Developer.ShippingApi.Rules.WeightRule)
  type: Method
  source:
    id: IsWithin
    path: ''
    startLine: 9972
  assemblies:
  - cs.temp.dll
  namespace: PitneyBowes.Developer.ShippingApi.Rules
  syntax:
    content: public static bool IsWithin(this IParcelWeight parcel, WeightRule rule)
    parameters:
    - id: parcel
      type: PitneyBowes.Developer.ShippingApi.IParcelWeight
    - id: rule
      type: PitneyBowes.Developer.ShippingApi.Rules.WeightRule
    return:
      type: System.Boolean
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsWithin(parcel As IParcelWeight, rule As WeightRule) As Boolean
  overload: PitneyBowes.Developer.ShippingApi.Rules.ConvenienceExtensions.IsWithin*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: PitneyBowes.Developer.ShippingApi.Rules
  commentId: N:PitneyBowes.Developer.ShippingApi.Rules
  isExternal: false
  name: PitneyBowes.Developer.ShippingApi.Rules
  nameWithType: PitneyBowes.Developer.ShippingApi.Rules
  fullName: PitneyBowes.Developer.ShippingApi.Rules
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: PitneyBowes.Developer.ShippingApi.Rules.ConvenienceExtensions.Contains*
  commentId: Overload:PitneyBowes.Developer.ShippingApi.Rules.ConvenienceExtensions.Contains
  isExternal: false
  name: Contains
  nameWithType: ConvenienceExtensions.Contains
  fullName: PitneyBowes.Developer.ShippingApi.Rules.ConvenienceExtensions.Contains
- uid: IEnumerable{{T}}
  commentId: '!:IEnumerable{``0}'
  definition: IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: PitneyBowes.Developer.ShippingApi.Rules.ConvenienceExtensions.IsWithin*
  commentId: Overload:PitneyBowes.Developer.ShippingApi.Rules.ConvenienceExtensions.IsWithin
  isExternal: false
  name: IsWithin
  nameWithType: ConvenienceExtensions.IsWithin
  fullName: PitneyBowes.Developer.ShippingApi.Rules.ConvenienceExtensions.IsWithin
- uid: PitneyBowes.Developer.ShippingApi.IParcelDimension
  commentId: T:PitneyBowes.Developer.ShippingApi.IParcelDimension
  parent: PitneyBowes.Developer.ShippingApi
  isExternal: false
  name: IParcelDimension
  nameWithType: IParcelDimension
  fullName: PitneyBowes.Developer.ShippingApi.IParcelDimension
- uid: PitneyBowes.Developer.ShippingApi.Rules.DimensionRule
  commentId: T:PitneyBowes.Developer.ShippingApi.Rules.DimensionRule
  parent: PitneyBowes.Developer.ShippingApi.Rules
  isExternal: false
  name: DimensionRule
  nameWithType: DimensionRule
  fullName: PitneyBowes.Developer.ShippingApi.Rules.DimensionRule
- uid: PitneyBowes.Developer.ShippingApi
  commentId: N:PitneyBowes.Developer.ShippingApi
  isExternal: false
  name: PitneyBowes.Developer.ShippingApi
  nameWithType: PitneyBowes.Developer.ShippingApi
  fullName: PitneyBowes.Developer.ShippingApi
- uid: PitneyBowes.Developer.ShippingApi.IParcelWeight
  commentId: T:PitneyBowes.Developer.ShippingApi.IParcelWeight
  parent: PitneyBowes.Developer.ShippingApi
  isExternal: false
  name: IParcelWeight
  nameWithType: IParcelWeight
  fullName: PitneyBowes.Developer.ShippingApi.IParcelWeight
- uid: PitneyBowes.Developer.ShippingApi.Rules.WeightRule
  commentId: T:PitneyBowes.Developer.ShippingApi.Rules.WeightRule
  parent: PitneyBowes.Developer.ShippingApi.Rules
  isExternal: false
  name: WeightRule
  nameWithType: WeightRule
  fullName: PitneyBowes.Developer.ShippingApi.Rules.WeightRule
