### YamlMime:ManagedReference
items:
- uid: PitneyBowes.Developer.ShippingApi.Method.AddressSuggestions
  commentId: T:PitneyBowes.Developer.ShippingApi.Method.AddressSuggestions
  id: AddressSuggestions
  parent: PitneyBowes.Developer.ShippingApi.Method
  children:
  - PitneyBowes.Developer.ShippingApi.Method.AddressSuggestions.Addresses
  - PitneyBowes.Developer.ShippingApi.Method.AddressSuggestions.SuggestionType
  langs:
  - csharp
  - vb
  name: AddressSuggestions
  nameWithType: AddressSuggestions
  fullName: PitneyBowes.Developer.ShippingApi.Method.AddressSuggestions
  type: Class
  source:
    id: AddressSuggestions
    path: ''
    startLine: 3721
  assemblies:
  - cs.temp.dll
  namespace: PitneyBowes.Developer.ShippingApi.Method
  summary: "\nAddress suggestions.\n"
  example: []
  syntax:
    content: public class AddressSuggestions
    content.vb: Public Class AddressSuggestions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: PitneyBowes.Developer.ShippingApi.Method.AddressSuggestions.SuggestionType
  commentId: P:PitneyBowes.Developer.ShippingApi.Method.AddressSuggestions.SuggestionType
  id: SuggestionType
  parent: PitneyBowes.Developer.ShippingApi.Method.AddressSuggestions
  langs:
  - csharp
  - vb
  name: SuggestionType
  nameWithType: AddressSuggestions.SuggestionType
  fullName: PitneyBowes.Developer.ShippingApi.Method.AddressSuggestions.SuggestionType
  type: Property
  source:
    id: SuggestionType
    path: ''
    startLine: 3727
  assemblies:
  - cs.temp.dll
  namespace: PitneyBowes.Developer.ShippingApi.Method
  summary: "\nThe part of the address that was changed from the original.\n"
  example: []
  syntax:
    content: public string SuggestionType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SuggestionType As String
  overload: PitneyBowes.Developer.ShippingApi.Method.AddressSuggestions.SuggestionType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PitneyBowes.Developer.ShippingApi.Method.AddressSuggestions.Addresses
  commentId: P:PitneyBowes.Developer.ShippingApi.Method.AddressSuggestions.Addresses
  id: Addresses
  parent: PitneyBowes.Developer.ShippingApi.Method.AddressSuggestions
  langs:
  - csharp
  - vb
  name: Addresses
  nameWithType: AddressSuggestions.Addresses
  fullName: PitneyBowes.Developer.ShippingApi.Method.AddressSuggestions.Addresses
  type: Property
  source:
    id: Addresses
    path: ''
    startLine: 3733
  assemblies:
  - cs.temp.dll
  namespace: PitneyBowes.Developer.ShippingApi.Method
  summary: "\nEach address object provides an alternative suggested address.\n"
  example: []
  syntax:
    content: public IEnumerable<IAddress> Addresses { get; set; }
    parameters: []
    return:
      type: IEnumerable{PitneyBowes.Developer.ShippingApi.IAddress}
      description: The addresses.
    content.vb: Public Property Addresses As IEnumerable(Of IAddress)
  overload: PitneyBowes.Developer.ShippingApi.Method.AddressSuggestions.Addresses*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: PitneyBowes.Developer.ShippingApi.Method
  commentId: N:PitneyBowes.Developer.ShippingApi.Method
  isExternal: false
  name: PitneyBowes.Developer.ShippingApi.Method
  nameWithType: PitneyBowes.Developer.ShippingApi.Method
  fullName: PitneyBowes.Developer.ShippingApi.Method
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: PitneyBowes.Developer.ShippingApi.Method.AddressSuggestions.SuggestionType*
  commentId: Overload:PitneyBowes.Developer.ShippingApi.Method.AddressSuggestions.SuggestionType
  isExternal: false
  name: SuggestionType
  nameWithType: AddressSuggestions.SuggestionType
  fullName: PitneyBowes.Developer.ShippingApi.Method.AddressSuggestions.SuggestionType
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: PitneyBowes.Developer.ShippingApi.Method.AddressSuggestions.Addresses*
  commentId: Overload:PitneyBowes.Developer.ShippingApi.Method.AddressSuggestions.Addresses
  isExternal: false
  name: Addresses
  nameWithType: AddressSuggestions.Addresses
  fullName: PitneyBowes.Developer.ShippingApi.Method.AddressSuggestions.Addresses
- uid: IEnumerable{PitneyBowes.Developer.ShippingApi.IAddress}
  commentId: '!:IEnumerable{PitneyBowes.Developer.ShippingApi.IAddress}'
  definition: IEnumerable`1
  name: IEnumerable<IAddress>
  nameWithType: IEnumerable<IAddress>
  fullName: IEnumerable<PitneyBowes.Developer.ShippingApi.IAddress>
  nameWithType.vb: IEnumerable(Of IAddress)
  fullName.vb: IEnumerable(Of PitneyBowes.Developer.ShippingApi.IAddress)
  name.vb: IEnumerable(Of IAddress)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PitneyBowes.Developer.ShippingApi.IAddress
    name: IAddress
    nameWithType: IAddress
    fullName: PitneyBowes.Developer.ShippingApi.IAddress
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PitneyBowes.Developer.ShippingApi.IAddress
    name: IAddress
    nameWithType: IAddress
    fullName: PitneyBowes.Developer.ShippingApi.IAddress
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
