### YamlMime:ManagedReference
items:
- uid: PitneyBowes.Developer.ShippingApi.Rules.RuleReport
  commentId: T:PitneyBowes.Developer.ShippingApi.Rules.RuleReport
  id: RuleReport
  parent: PitneyBowes.Developer.ShippingApi.Rules
  children:
  - PitneyBowes.Developer.ShippingApi.Rules.RuleReport.CarrierRuleFilter
  - PitneyBowes.Developer.ShippingApi.Rules.RuleReport.CarrierRules
  - PitneyBowes.Developer.ShippingApi.Rules.RuleReport.GetEnumerator
  - PitneyBowes.Developer.ShippingApi.Rules.RuleReport.ParcelTypeRuleFilter
  - PitneyBowes.Developer.ShippingApi.Rules.RuleReport.ServiceRuleFilter
  - PitneyBowes.Developer.ShippingApi.Rules.RuleReport.SpecialServicesRuleFilter
  langs:
  - csharp
  - vb
  name: RuleReport
  nameWithType: RuleReport
  fullName: PitneyBowes.Developer.ShippingApi.Rules.RuleReport
  type: Class
  source:
    id: RuleReport
    path: ''
    startLine: 10367
  assemblies:
  - cs.temp.dll
  namespace: PitneyBowes.Developer.ShippingApi.Rules
  syntax:
    content: 'public class RuleReport : IEnumerable<Tuple<CarrierRule, ServiceRule, ParcelTypeRule, SpecialServicesRule>>'
    content.vb: >-
      Public Class RuleReport
          Inherits IEnumerable(Of Tuple(Of CarrierRule, ServiceRule, ParcelTypeRule, SpecialServicesRule))
  inheritance:
  - IEnumerable{Tuple{PitneyBowes.Developer.ShippingApi.Rules.CarrierRule,PitneyBowes.Developer.ShippingApi.Rules.ServiceRule,PitneyBowes.Developer.ShippingApi.Rules.ParcelTypeRule,PitneyBowes.Developer.ShippingApi.Rules.SpecialServicesRule}}
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: PitneyBowes.Developer.ShippingApi.Rules.RuleReport.CarrierRules
  commentId: P:PitneyBowes.Developer.ShippingApi.Rules.RuleReport.CarrierRules
  id: CarrierRules
  parent: PitneyBowes.Developer.ShippingApi.Rules.RuleReport
  langs:
  - csharp
  - vb
  name: CarrierRules
  nameWithType: RuleReport.CarrierRules
  fullName: PitneyBowes.Developer.ShippingApi.Rules.RuleReport.CarrierRules
  type: Property
  source:
    id: CarrierRules
    path: ''
    startLine: 10369
  assemblies:
  - cs.temp.dll
  namespace: PitneyBowes.Developer.ShippingApi.Rules
  syntax:
    content: public IEnumerable<CarrierRule> CarrierRules { get; set; }
    parameters: []
    return:
      type: IEnumerable{PitneyBowes.Developer.ShippingApi.Rules.CarrierRule}
    content.vb: Public Property CarrierRules As IEnumerable(Of CarrierRule)
  overload: PitneyBowes.Developer.ShippingApi.Rules.RuleReport.CarrierRules*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PitneyBowes.Developer.ShippingApi.Rules.RuleReport.CarrierRuleFilter
  commentId: P:PitneyBowes.Developer.ShippingApi.Rules.RuleReport.CarrierRuleFilter
  id: CarrierRuleFilter
  parent: PitneyBowes.Developer.ShippingApi.Rules.RuleReport
  langs:
  - csharp
  - vb
  name: CarrierRuleFilter
  nameWithType: RuleReport.CarrierRuleFilter
  fullName: PitneyBowes.Developer.ShippingApi.Rules.RuleReport.CarrierRuleFilter
  type: Property
  source:
    id: CarrierRuleFilter
    path: ''
    startLine: 10370
  assemblies:
  - cs.temp.dll
  namespace: PitneyBowes.Developer.ShippingApi.Rules
  syntax:
    content: public Func<CarrierRule, bool> CarrierRuleFilter { get; set; }
    parameters: []
    return:
      type: Func{PitneyBowes.Developer.ShippingApi.Rules.CarrierRule,System.Boolean}
    content.vb: Public Property CarrierRuleFilter As Func(Of CarrierRule, Boolean)
  overload: PitneyBowes.Developer.ShippingApi.Rules.RuleReport.CarrierRuleFilter*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PitneyBowes.Developer.ShippingApi.Rules.RuleReport.ServiceRuleFilter
  commentId: P:PitneyBowes.Developer.ShippingApi.Rules.RuleReport.ServiceRuleFilter
  id: ServiceRuleFilter
  parent: PitneyBowes.Developer.ShippingApi.Rules.RuleReport
  langs:
  - csharp
  - vb
  name: ServiceRuleFilter
  nameWithType: RuleReport.ServiceRuleFilter
  fullName: PitneyBowes.Developer.ShippingApi.Rules.RuleReport.ServiceRuleFilter
  type: Property
  source:
    id: ServiceRuleFilter
    path: ''
    startLine: 10371
  assemblies:
  - cs.temp.dll
  namespace: PitneyBowes.Developer.ShippingApi.Rules
  syntax:
    content: public Func<ServiceRule, bool> ServiceRuleFilter { get; set; }
    parameters: []
    return:
      type: Func{PitneyBowes.Developer.ShippingApi.Rules.ServiceRule,System.Boolean}
    content.vb: Public Property ServiceRuleFilter As Func(Of ServiceRule, Boolean)
  overload: PitneyBowes.Developer.ShippingApi.Rules.RuleReport.ServiceRuleFilter*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PitneyBowes.Developer.ShippingApi.Rules.RuleReport.ParcelTypeRuleFilter
  commentId: P:PitneyBowes.Developer.ShippingApi.Rules.RuleReport.ParcelTypeRuleFilter
  id: ParcelTypeRuleFilter
  parent: PitneyBowes.Developer.ShippingApi.Rules.RuleReport
  langs:
  - csharp
  - vb
  name: ParcelTypeRuleFilter
  nameWithType: RuleReport.ParcelTypeRuleFilter
  fullName: PitneyBowes.Developer.ShippingApi.Rules.RuleReport.ParcelTypeRuleFilter
  type: Property
  source:
    id: ParcelTypeRuleFilter
    path: ''
    startLine: 10372
  assemblies:
  - cs.temp.dll
  namespace: PitneyBowes.Developer.ShippingApi.Rules
  syntax:
    content: public Func<ParcelTypeRule, bool> ParcelTypeRuleFilter { get; set; }
    parameters: []
    return:
      type: Func{PitneyBowes.Developer.ShippingApi.Rules.ParcelTypeRule,System.Boolean}
    content.vb: Public Property ParcelTypeRuleFilter As Func(Of ParcelTypeRule, Boolean)
  overload: PitneyBowes.Developer.ShippingApi.Rules.RuleReport.ParcelTypeRuleFilter*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PitneyBowes.Developer.ShippingApi.Rules.RuleReport.SpecialServicesRuleFilter
  commentId: P:PitneyBowes.Developer.ShippingApi.Rules.RuleReport.SpecialServicesRuleFilter
  id: SpecialServicesRuleFilter
  parent: PitneyBowes.Developer.ShippingApi.Rules.RuleReport
  langs:
  - csharp
  - vb
  name: SpecialServicesRuleFilter
  nameWithType: RuleReport.SpecialServicesRuleFilter
  fullName: PitneyBowes.Developer.ShippingApi.Rules.RuleReport.SpecialServicesRuleFilter
  type: Property
  source:
    id: SpecialServicesRuleFilter
    path: ''
    startLine: 10373
  assemblies:
  - cs.temp.dll
  namespace: PitneyBowes.Developer.ShippingApi.Rules
  syntax:
    content: public Func<SpecialServicesRule, bool> SpecialServicesRuleFilter { get; set; }
    parameters: []
    return:
      type: Func{PitneyBowes.Developer.ShippingApi.Rules.SpecialServicesRule,System.Boolean}
    content.vb: Public Property SpecialServicesRuleFilter As Func(Of SpecialServicesRule, Boolean)
  overload: PitneyBowes.Developer.ShippingApi.Rules.RuleReport.SpecialServicesRuleFilter*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PitneyBowes.Developer.ShippingApi.Rules.RuleReport.GetEnumerator
  commentId: M:PitneyBowes.Developer.ShippingApi.Rules.RuleReport.GetEnumerator
  id: GetEnumerator
  parent: PitneyBowes.Developer.ShippingApi.Rules.RuleReport
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: RuleReport.GetEnumerator()
  fullName: PitneyBowes.Developer.ShippingApi.Rules.RuleReport.GetEnumerator()
  type: Method
  source:
    id: GetEnumerator
    path: ''
    startLine: 10375
  assemblies:
  - cs.temp.dll
  namespace: PitneyBowes.Developer.ShippingApi.Rules
  syntax:
    content: public IEnumerator<Tuple<CarrierRule, ServiceRule, ParcelTypeRule, SpecialServicesRule>> GetEnumerator()
    return:
      type: IEnumerator{Tuple{PitneyBowes.Developer.ShippingApi.Rules.CarrierRule,PitneyBowes.Developer.ShippingApi.Rules.ServiceRule,PitneyBowes.Developer.ShippingApi.Rules.ParcelTypeRule,PitneyBowes.Developer.ShippingApi.Rules.SpecialServicesRule}}
    content.vb: Public Function GetEnumerator As IEnumerator(Of Tuple(Of CarrierRule, ServiceRule, ParcelTypeRule, SpecialServicesRule))
  overload: PitneyBowes.Developer.ShippingApi.Rules.RuleReport.GetEnumerator*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: PitneyBowes.Developer.ShippingApi.Rules
  commentId: N:PitneyBowes.Developer.ShippingApi.Rules
  isExternal: false
  name: PitneyBowes.Developer.ShippingApi.Rules
  nameWithType: PitneyBowes.Developer.ShippingApi.Rules
  fullName: PitneyBowes.Developer.ShippingApi.Rules
- uid: IEnumerable{Tuple{PitneyBowes.Developer.ShippingApi.Rules.CarrierRule,PitneyBowes.Developer.ShippingApi.Rules.ServiceRule,PitneyBowes.Developer.ShippingApi.Rules.ParcelTypeRule,PitneyBowes.Developer.ShippingApi.Rules.SpecialServicesRule}}
  commentId: '!:IEnumerable{Tuple{PitneyBowes.Developer.ShippingApi.Rules.CarrierRule,PitneyBowes.Developer.ShippingApi.Rules.ServiceRule,PitneyBowes.Developer.ShippingApi.Rules.ParcelTypeRule,PitneyBowes.Developer.ShippingApi.Rules.SpecialServicesRule}}'
  definition: IEnumerable`1
  name: IEnumerable<Tuple<CarrierRule, ServiceRule, ParcelTypeRule, SpecialServicesRule>>
  nameWithType: IEnumerable<Tuple<CarrierRule, ServiceRule, ParcelTypeRule, SpecialServicesRule>>
  fullName: IEnumerable<Tuple<PitneyBowes.Developer.ShippingApi.Rules.CarrierRule, PitneyBowes.Developer.ShippingApi.Rules.ServiceRule, PitneyBowes.Developer.ShippingApi.Rules.ParcelTypeRule, PitneyBowes.Developer.ShippingApi.Rules.SpecialServicesRule>>
  nameWithType.vb: IEnumerable(Of Tuple(Of CarrierRule, ServiceRule, ParcelTypeRule, SpecialServicesRule))
  fullName.vb: IEnumerable(Of Tuple(Of PitneyBowes.Developer.ShippingApi.Rules.CarrierRule, PitneyBowes.Developer.ShippingApi.Rules.ServiceRule, PitneyBowes.Developer.ShippingApi.Rules.ParcelTypeRule, PitneyBowes.Developer.ShippingApi.Rules.SpecialServicesRule))
  name.vb: IEnumerable(Of Tuple(Of CarrierRule, ServiceRule, ParcelTypeRule, SpecialServicesRule))
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Tuple`4
    name: Tuple
    nameWithType: Tuple
    fullName: Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PitneyBowes.Developer.ShippingApi.Rules.CarrierRule
    name: CarrierRule
    nameWithType: CarrierRule
    fullName: PitneyBowes.Developer.ShippingApi.Rules.CarrierRule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PitneyBowes.Developer.ShippingApi.Rules.ServiceRule
    name: ServiceRule
    nameWithType: ServiceRule
    fullName: PitneyBowes.Developer.ShippingApi.Rules.ServiceRule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PitneyBowes.Developer.ShippingApi.Rules.ParcelTypeRule
    name: ParcelTypeRule
    nameWithType: ParcelTypeRule
    fullName: PitneyBowes.Developer.ShippingApi.Rules.ParcelTypeRule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PitneyBowes.Developer.ShippingApi.Rules.SpecialServicesRule
    name: SpecialServicesRule
    nameWithType: SpecialServicesRule
    fullName: PitneyBowes.Developer.ShippingApi.Rules.SpecialServicesRule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Tuple`4
    name: Tuple
    nameWithType: Tuple
    fullName: Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PitneyBowes.Developer.ShippingApi.Rules.CarrierRule
    name: CarrierRule
    nameWithType: CarrierRule
    fullName: PitneyBowes.Developer.ShippingApi.Rules.CarrierRule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PitneyBowes.Developer.ShippingApi.Rules.ServiceRule
    name: ServiceRule
    nameWithType: ServiceRule
    fullName: PitneyBowes.Developer.ShippingApi.Rules.ServiceRule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PitneyBowes.Developer.ShippingApi.Rules.ParcelTypeRule
    name: ParcelTypeRule
    nameWithType: ParcelTypeRule
    fullName: PitneyBowes.Developer.ShippingApi.Rules.ParcelTypeRule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PitneyBowes.Developer.ShippingApi.Rules.SpecialServicesRule
    name: SpecialServicesRule
    nameWithType: SpecialServicesRule
    fullName: PitneyBowes.Developer.ShippingApi.Rules.SpecialServicesRule
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: PitneyBowes.Developer.ShippingApi.Rules.RuleReport.CarrierRules*
  commentId: Overload:PitneyBowes.Developer.ShippingApi.Rules.RuleReport.CarrierRules
  isExternal: false
  name: CarrierRules
  nameWithType: RuleReport.CarrierRules
  fullName: PitneyBowes.Developer.ShippingApi.Rules.RuleReport.CarrierRules
- uid: IEnumerable{PitneyBowes.Developer.ShippingApi.Rules.CarrierRule}
  commentId: '!:IEnumerable{PitneyBowes.Developer.ShippingApi.Rules.CarrierRule}'
  definition: IEnumerable`1
  name: IEnumerable<CarrierRule>
  nameWithType: IEnumerable<CarrierRule>
  fullName: IEnumerable<PitneyBowes.Developer.ShippingApi.Rules.CarrierRule>
  nameWithType.vb: IEnumerable(Of CarrierRule)
  fullName.vb: IEnumerable(Of PitneyBowes.Developer.ShippingApi.Rules.CarrierRule)
  name.vb: IEnumerable(Of CarrierRule)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PitneyBowes.Developer.ShippingApi.Rules.CarrierRule
    name: CarrierRule
    nameWithType: CarrierRule
    fullName: PitneyBowes.Developer.ShippingApi.Rules.CarrierRule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PitneyBowes.Developer.ShippingApi.Rules.CarrierRule
    name: CarrierRule
    nameWithType: CarrierRule
    fullName: PitneyBowes.Developer.ShippingApi.Rules.CarrierRule
  - name: )
    nameWithType: )
    fullName: )
- uid: PitneyBowes.Developer.ShippingApi.Rules.RuleReport.CarrierRuleFilter*
  commentId: Overload:PitneyBowes.Developer.ShippingApi.Rules.RuleReport.CarrierRuleFilter
  isExternal: false
  name: CarrierRuleFilter
  nameWithType: RuleReport.CarrierRuleFilter
  fullName: PitneyBowes.Developer.ShippingApi.Rules.RuleReport.CarrierRuleFilter
- uid: Func{PitneyBowes.Developer.ShippingApi.Rules.CarrierRule,System.Boolean}
  commentId: '!:Func{PitneyBowes.Developer.ShippingApi.Rules.CarrierRule,System.Boolean}'
  definition: Func`2
  name: Func<CarrierRule, Boolean>
  nameWithType: Func<CarrierRule, Boolean>
  fullName: Func<PitneyBowes.Developer.ShippingApi.Rules.CarrierRule, System.Boolean>
  nameWithType.vb: Func(Of CarrierRule, Boolean)
  fullName.vb: Func(Of PitneyBowes.Developer.ShippingApi.Rules.CarrierRule, System.Boolean)
  name.vb: Func(Of CarrierRule, Boolean)
  spec.csharp:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PitneyBowes.Developer.ShippingApi.Rules.CarrierRule
    name: CarrierRule
    nameWithType: CarrierRule
    fullName: PitneyBowes.Developer.ShippingApi.Rules.CarrierRule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PitneyBowes.Developer.ShippingApi.Rules.CarrierRule
    name: CarrierRule
    nameWithType: CarrierRule
    fullName: PitneyBowes.Developer.ShippingApi.Rules.CarrierRule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Func`2
  isExternal: true
  name: Func<, >
  nameWithType: Func<, >
  fullName: Func<, >
  nameWithType.vb: Func(Of , )
  fullName.vb: Func(Of , )
  name.vb: Func(Of , )
  spec.csharp:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: PitneyBowes.Developer.ShippingApi.Rules.RuleReport.ServiceRuleFilter*
  commentId: Overload:PitneyBowes.Developer.ShippingApi.Rules.RuleReport.ServiceRuleFilter
  isExternal: false
  name: ServiceRuleFilter
  nameWithType: RuleReport.ServiceRuleFilter
  fullName: PitneyBowes.Developer.ShippingApi.Rules.RuleReport.ServiceRuleFilter
- uid: Func{PitneyBowes.Developer.ShippingApi.Rules.ServiceRule,System.Boolean}
  commentId: '!:Func{PitneyBowes.Developer.ShippingApi.Rules.ServiceRule,System.Boolean}'
  definition: Func`2
  name: Func<ServiceRule, Boolean>
  nameWithType: Func<ServiceRule, Boolean>
  fullName: Func<PitneyBowes.Developer.ShippingApi.Rules.ServiceRule, System.Boolean>
  nameWithType.vb: Func(Of ServiceRule, Boolean)
  fullName.vb: Func(Of PitneyBowes.Developer.ShippingApi.Rules.ServiceRule, System.Boolean)
  name.vb: Func(Of ServiceRule, Boolean)
  spec.csharp:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PitneyBowes.Developer.ShippingApi.Rules.ServiceRule
    name: ServiceRule
    nameWithType: ServiceRule
    fullName: PitneyBowes.Developer.ShippingApi.Rules.ServiceRule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PitneyBowes.Developer.ShippingApi.Rules.ServiceRule
    name: ServiceRule
    nameWithType: ServiceRule
    fullName: PitneyBowes.Developer.ShippingApi.Rules.ServiceRule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PitneyBowes.Developer.ShippingApi.Rules.RuleReport.ParcelTypeRuleFilter*
  commentId: Overload:PitneyBowes.Developer.ShippingApi.Rules.RuleReport.ParcelTypeRuleFilter
  isExternal: false
  name: ParcelTypeRuleFilter
  nameWithType: RuleReport.ParcelTypeRuleFilter
  fullName: PitneyBowes.Developer.ShippingApi.Rules.RuleReport.ParcelTypeRuleFilter
- uid: Func{PitneyBowes.Developer.ShippingApi.Rules.ParcelTypeRule,System.Boolean}
  commentId: '!:Func{PitneyBowes.Developer.ShippingApi.Rules.ParcelTypeRule,System.Boolean}'
  definition: Func`2
  name: Func<ParcelTypeRule, Boolean>
  nameWithType: Func<ParcelTypeRule, Boolean>
  fullName: Func<PitneyBowes.Developer.ShippingApi.Rules.ParcelTypeRule, System.Boolean>
  nameWithType.vb: Func(Of ParcelTypeRule, Boolean)
  fullName.vb: Func(Of PitneyBowes.Developer.ShippingApi.Rules.ParcelTypeRule, System.Boolean)
  name.vb: Func(Of ParcelTypeRule, Boolean)
  spec.csharp:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PitneyBowes.Developer.ShippingApi.Rules.ParcelTypeRule
    name: ParcelTypeRule
    nameWithType: ParcelTypeRule
    fullName: PitneyBowes.Developer.ShippingApi.Rules.ParcelTypeRule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PitneyBowes.Developer.ShippingApi.Rules.ParcelTypeRule
    name: ParcelTypeRule
    nameWithType: ParcelTypeRule
    fullName: PitneyBowes.Developer.ShippingApi.Rules.ParcelTypeRule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PitneyBowes.Developer.ShippingApi.Rules.RuleReport.SpecialServicesRuleFilter*
  commentId: Overload:PitneyBowes.Developer.ShippingApi.Rules.RuleReport.SpecialServicesRuleFilter
  isExternal: false
  name: SpecialServicesRuleFilter
  nameWithType: RuleReport.SpecialServicesRuleFilter
  fullName: PitneyBowes.Developer.ShippingApi.Rules.RuleReport.SpecialServicesRuleFilter
- uid: Func{PitneyBowes.Developer.ShippingApi.Rules.SpecialServicesRule,System.Boolean}
  commentId: '!:Func{PitneyBowes.Developer.ShippingApi.Rules.SpecialServicesRule,System.Boolean}'
  definition: Func`2
  name: Func<SpecialServicesRule, Boolean>
  nameWithType: Func<SpecialServicesRule, Boolean>
  fullName: Func<PitneyBowes.Developer.ShippingApi.Rules.SpecialServicesRule, System.Boolean>
  nameWithType.vb: Func(Of SpecialServicesRule, Boolean)
  fullName.vb: Func(Of PitneyBowes.Developer.ShippingApi.Rules.SpecialServicesRule, System.Boolean)
  name.vb: Func(Of SpecialServicesRule, Boolean)
  spec.csharp:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PitneyBowes.Developer.ShippingApi.Rules.SpecialServicesRule
    name: SpecialServicesRule
    nameWithType: SpecialServicesRule
    fullName: PitneyBowes.Developer.ShippingApi.Rules.SpecialServicesRule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PitneyBowes.Developer.ShippingApi.Rules.SpecialServicesRule
    name: SpecialServicesRule
    nameWithType: SpecialServicesRule
    fullName: PitneyBowes.Developer.ShippingApi.Rules.SpecialServicesRule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PitneyBowes.Developer.ShippingApi.Rules.RuleReport.GetEnumerator*
  commentId: Overload:PitneyBowes.Developer.ShippingApi.Rules.RuleReport.GetEnumerator
  isExternal: false
  name: GetEnumerator
  nameWithType: RuleReport.GetEnumerator
  fullName: PitneyBowes.Developer.ShippingApi.Rules.RuleReport.GetEnumerator
- uid: IEnumerator{Tuple{PitneyBowes.Developer.ShippingApi.Rules.CarrierRule,PitneyBowes.Developer.ShippingApi.Rules.ServiceRule,PitneyBowes.Developer.ShippingApi.Rules.ParcelTypeRule,PitneyBowes.Developer.ShippingApi.Rules.SpecialServicesRule}}
  commentId: '!:IEnumerator{Tuple{PitneyBowes.Developer.ShippingApi.Rules.CarrierRule,PitneyBowes.Developer.ShippingApi.Rules.ServiceRule,PitneyBowes.Developer.ShippingApi.Rules.ParcelTypeRule,PitneyBowes.Developer.ShippingApi.Rules.SpecialServicesRule}}'
  definition: IEnumerator`1
  name: IEnumerator<Tuple<CarrierRule, ServiceRule, ParcelTypeRule, SpecialServicesRule>>
  nameWithType: IEnumerator<Tuple<CarrierRule, ServiceRule, ParcelTypeRule, SpecialServicesRule>>
  fullName: IEnumerator<Tuple<PitneyBowes.Developer.ShippingApi.Rules.CarrierRule, PitneyBowes.Developer.ShippingApi.Rules.ServiceRule, PitneyBowes.Developer.ShippingApi.Rules.ParcelTypeRule, PitneyBowes.Developer.ShippingApi.Rules.SpecialServicesRule>>
  nameWithType.vb: IEnumerator(Of Tuple(Of CarrierRule, ServiceRule, ParcelTypeRule, SpecialServicesRule))
  fullName.vb: IEnumerator(Of Tuple(Of PitneyBowes.Developer.ShippingApi.Rules.CarrierRule, PitneyBowes.Developer.ShippingApi.Rules.ServiceRule, PitneyBowes.Developer.ShippingApi.Rules.ParcelTypeRule, PitneyBowes.Developer.ShippingApi.Rules.SpecialServicesRule))
  name.vb: IEnumerator(Of Tuple(Of CarrierRule, ServiceRule, ParcelTypeRule, SpecialServicesRule))
  spec.csharp:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Tuple`4
    name: Tuple
    nameWithType: Tuple
    fullName: Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PitneyBowes.Developer.ShippingApi.Rules.CarrierRule
    name: CarrierRule
    nameWithType: CarrierRule
    fullName: PitneyBowes.Developer.ShippingApi.Rules.CarrierRule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PitneyBowes.Developer.ShippingApi.Rules.ServiceRule
    name: ServiceRule
    nameWithType: ServiceRule
    fullName: PitneyBowes.Developer.ShippingApi.Rules.ServiceRule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PitneyBowes.Developer.ShippingApi.Rules.ParcelTypeRule
    name: ParcelTypeRule
    nameWithType: ParcelTypeRule
    fullName: PitneyBowes.Developer.ShippingApi.Rules.ParcelTypeRule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PitneyBowes.Developer.ShippingApi.Rules.SpecialServicesRule
    name: SpecialServicesRule
    nameWithType: SpecialServicesRule
    fullName: PitneyBowes.Developer.ShippingApi.Rules.SpecialServicesRule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Tuple`4
    name: Tuple
    nameWithType: Tuple
    fullName: Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PitneyBowes.Developer.ShippingApi.Rules.CarrierRule
    name: CarrierRule
    nameWithType: CarrierRule
    fullName: PitneyBowes.Developer.ShippingApi.Rules.CarrierRule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PitneyBowes.Developer.ShippingApi.Rules.ServiceRule
    name: ServiceRule
    nameWithType: ServiceRule
    fullName: PitneyBowes.Developer.ShippingApi.Rules.ServiceRule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PitneyBowes.Developer.ShippingApi.Rules.ParcelTypeRule
    name: ParcelTypeRule
    nameWithType: ParcelTypeRule
    fullName: PitneyBowes.Developer.ShippingApi.Rules.ParcelTypeRule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PitneyBowes.Developer.ShippingApi.Rules.SpecialServicesRule
    name: SpecialServicesRule
    nameWithType: SpecialServicesRule
    fullName: PitneyBowes.Developer.ShippingApi.Rules.SpecialServicesRule
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerator`1
  isExternal: true
  name: IEnumerator<>
  nameWithType: IEnumerator<>
  fullName: IEnumerator<>
  nameWithType.vb: IEnumerator(Of )
  fullName.vb: IEnumerator(Of )
  name.vb: IEnumerator(Of )
  spec.csharp:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
